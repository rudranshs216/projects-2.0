{"version":3,"sources":["features/appSlice.js","firebase.js","Chat.js","features/cameraSlice.js","Chats.js","ChatView.js","Login.js","Preview.js","WebCamCapture.js","App.js","app/store.js","index.js"],"names":["appSlice","createSlice","name","initialState","user","selectImage","reducers","login","state","action","payload","logout","resetSelectImage","actions","selectSelectedImage","app","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","provider","GoogleAuthProvider","Chat","profilePic","username","timestamp","imageURL","read","id","dispatch","useDispatch","history","useHistory","onClick","collection","doc","set","merge","push","className","Avatar","src","date","Date","toDate","toUTCString","StopRounded","cameraSlice","cameraImage","setCameraImage","resetCameraImage","selectCameraImage","camera","Chats","useState","post","setPosts","useSelector","useEffect","orderBy","onSnapshot","snap","docs","map","data","signOut","Search","type","placeholder","ChatBubble","RadioButtonUnchecked","fontSize","ChatView","selectImg","exit","replace","alt","isPlaying","duration","strokeWidth","size","colors","remainingTime","Login","Button","signInWithPopup","then","result","displayName","photoURL","uid","catch","err","alert","message","variant","Preview","Close","TextFields","Create","Note","MusicNote","AttachFile","Crop","Timer","uuid","ref","putString","on","error","console","log","child","getDownloadURL","url","add","FieldValue","serverTimestamp","Send","videoConstraints","width","height","facingMode","WebCamCapture","webCamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","audio","mirrored","screenshotFormat","App","onAuthStateChanged","authUser","exact","path","store","configureStore","reducer","appReducer","cameraReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f53bf57.chunk.js","sourcesContent":["import {createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState:{\n    user: null,\n    selectImage: null\n  },\n  reducers: {\n   \n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null\n    },\n    selectImage: (state,action) => {\n      state.selectImage = action.payload;\n    },\n    resetSelectImage: (state) => {\n      state.selectImage = null;\n    },\n\n  },\n});\n  \n\nexport const {login,logout,selectImage,resetSelectImage } = appSlice.actions;\n\n\nexport const selectSelectedImage = (state) => state.app.selectImage;\nexport const selectUser = (state) => state.app.user;\n\n\n\n\nexport default appSlice.reducer;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB1WqHoVgCnqefVXnsqV1Xgu0bIZ22aZPs\",\n    authDomain: \"snapchat-clone-f1fe4.firebaseapp.com\",\n    projectId: \"snapchat-clone-f1fe4\",\n    storageBucket: \"snapchat-clone-f1fe4.appspot.com\",\n    messagingSenderId: \"645573215946\",\n    appId: \"1:645573215946:web:37b8099df41e628d8a5633\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const storage = firebase.storage();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export {db,auth,storage, provider}\n","import { StopRounded } from '@mui/icons-material'\nimport { Avatar } from '@mui/material'\nimport React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport ReactTimeago from 'react-timeago';\nimport \"./Chat.css\"\nimport { selectImage } from './features/appSlice';\nimport { db } from './firebase';\n\nfunction Chat({profilePic, username, timestamp, imageURL, read,id}) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const open = () => {\n        if(!read){\n            dispatch(selectImage(imageURL));\n            db.collection(\"posts\").doc(id).set(\n                {\n                    read: true\n                },\n                {\n                    merge: true\n                }\n            );\n            history.push(\"/chats/view\")\n        }\n    }\n    return (\n        <div onClick={open} className=\"chat\">\n        <Avatar className=\"chat_avatar\" src={profilePic}/>\n        <div className=\"chat_info\">\n            <h4>{username}</h4>\n            <p>{!read && \"Tap to view -\"}  <ReactTimeago date= {new Date(timestamp?.toDate()).toUTCString()} /></p>\n        </div>\n        {!read && <StopRounded className=\"chat_icon\"/>}\n\n            \n        </div>\n    )\n}\n\nexport default Chat\n","import {createSlice } from '@reduxjs/toolkit';\n\nexport const cameraSlice = createSlice({\n  name: 'camera',\n  initialState:{\n    cameraImage: null,\n  },\n  reducers: {\n   \n    setCameraImage: (state, action) => {\n      state.cameraImage = action.payload;\n    },\n    resetCameraImage: (state, action) => {\n      state.cameraImage = null;\n    },\n  },\n});\n  \n\nexport const {setCameraImage, resetCameraImage } = cameraSlice.actions;\n\n\nexport const selectCameraImage = (state) => state.camera.cameraImage;\n\n\n\n\nexport default cameraSlice.reducer;\n","import { ChatBubble, RadioButtonUnchecked, Search } from '@mui/icons-material'\nimport { Avatar } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport Chat from './Chat';\nimport \"./Chats.css\"\nimport { selectUser } from './features/appSlice';\nimport { resetCameraImage } from './features/cameraSlice';\nimport {db,auth} from \"./firebase\";\n\n\n\nfunction Chats() {\n    const [post, setPosts] = useState([]);\n    const user = useSelector(selectUser);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        db.collection(\"posts\").orderBy(\"timestamp\", \"desc\").onSnapshot((snap)=> { \n        setPosts(snap.docs?.map((docs)=> ({id: docs.id, data: docs.data()})))})\n\n      \n       \n    }, [])\n    const takeSnap = () => {\n        dispatch(resetCameraImage())\n        history.push(\"/\")\n\n    }\n    \n    return (\n        <div className=\"chats\">\n        <div className=\"chats_header\">\n        <Avatar src={user.profilePic} onClick={()=>{auth.signOut();}} className=\"chats_avatar\"/>\n        <div className=\"chats_search\">\n            <Search className=\"chats_icons\"/>\n            <input type=\"text\" placeholder=\"Friends\"/>\n        </div>\n        <ChatBubble className=\"chats_icon\"/>\n        </div>\n       <div className=\"chats_post\">\n       {post?.map(({ id, data: {profilePic, username, timestamp, imageURL, read}}) => {\n           \n           return (<Chat \n               key={id}\n               id={id}\n               username={username}\n               timestamp={timestamp}\n               imageURL={imageURL}\n               profilePic={profilePic}\n               read={read}\n\n           />)\n          \n       })}\n           \n       </div>\n       <RadioButtonUnchecked \n           className=\"chats_takePicIcon\"\n           onClick={takeSnap}\n           fontSize=\"large\"\n       />\n\n        </div>\n    )\n}\n\nexport default Chats\n","import React, { useEffect } from 'react'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router';\nimport { selectSelectedImage } from './features/appSlice'\nimport \"./ChatView.css\";\n\nfunction ChatView() {\n   const history = useHistory();\n    const selectImg = useSelector(selectSelectedImage);\n    useEffect(() => {\n        if(!selectImg){\n            exit();\n        }\n        \n    }, [selectImg])\n   const exit = () => {\n       history.replace(\"/chats\")\n   }\n    return (\n        <div onClick={exit} className=\"chatView\">\n        <img src={selectImg} alt=\"\" />\n        <div className=\"chatView_timer\">\n        <CountdownCircleTimer\n         \n        isPlaying\n        duration={10}\n        strokeWidth={6}\n        size={50}\n        colors={[\n            [\"#004777\", 0.33],\n            [\"#F7B801\", 0.33],\n            [\"#A30000\", 0.33]\n        ]}\n        >\n        {({remainingTime})=>{\n            if(remainingTime == 0){\n                exit();\n            }\n            return remainingTime;\n        }}\n\n        </CountdownCircleTimer>\n        </div>\n            \n        </div>\n    )\n}\n\nexport default ChatView\n","import { Button } from '@mui/material'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { login } from './features/appSlice'\nimport { auth, provider } from './firebase'\nimport \"./Login.css\"\n\nfunction Login() {\n    const dispatch = useDispatch();\n    const signIn = () => {\n        auth.signInWithPopup(provider).then((result)=>{\n             dispatch(login({\n                 username: result.user.displayName,\n                 profilePic: result.user.photoURL,\n                 id: result.user.uid\n             }))\n        }).catch((err)=> {alert(err.message);})\n    }\n    return (\n        <div className=\"login\">\n        <div className=\"login_container\">\n            <img src=\"https://scx2.b-cdn.net/gfx/news/2017/1-snapchat.jpg\" alt=\"\" />\n            <Button onClick={signIn} variant=\"outlined\" >Sign In</Button>\n        </div>\n          \n        </div>\n    )\n}\n\nexport default Login\n","import { AttachFile, Close, Create, Crop, MusicNote, Note, Send, TextFields, Timer } from '@mui/icons-material'\nimport React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport {useSelector} from \"react-redux\"\nimport { useHistory } from 'react-router'\nimport {resetCameraImage, selectCameraImage} from \"./features/cameraSlice\"\nimport \"./Preview.css\"\nimport {v4 as uuid} from \"uuid\";\nimport {storage , db} from \"./firebase\";\nimport firebase from \"firebase\";\nimport { selectUser } from './features/appSlice'\n\n\n\nfunction Preview() {\n    const user = useSelector(selectUser);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const cameraImage = useSelector(selectCameraImage)\n    useEffect(() => {\n        if(!cameraImage){\n            history.replace(\"/\");\n        }\n        }, [cameraImage])\n\n        const closePreview = () => {\n            dispatch(resetCameraImage())\n            \n        }\n        const send = () => {\n            const id = uuid();\n            const uploadTask = storage.ref(`posts/${id}`).putString(cameraImage, \"data_url\");\n\n            uploadTask.on(\"state_changed\", null, (error)=>{console.log(error);}, ()=>{storage.ref(\"posts\").child(id).getDownloadURL().then((url) => { \n                db.collection(\"posts\").add({\n                    imageURL: url,\n                    username: user.username,\n                    read: false,\n                    profilePic: user.profilePic,\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                });\n                history.replace(\"/chats\")\n            })})\n        }\n    return (\n        <div className=\"preview\">\n        <Close onClick={closePreview} className=\"preview_close\"/>\n        \n        <div className=\"preview_toolbarR\">\n            <TextFields  className=\"preview_toolbarR_icon\"/>\n            <Create  className=\"preview_toolbarR_icon\"/>\n            <Note className=\"preview_toolbarR_icon\"/>\n            <MusicNote className=\"preview_toolbarR_icon\"/>\n            <AttachFile className=\"preview_toolbarR_icon\"/>\n            <Crop className=\"preview_toolbarR_icon\"/>\n            <Timer className=\"preview_toolbarR_icon\"/> \n        </div>\n        <div>\n\n        <img src={cameraImage} alt=\"\" />\n        </div>\n        <div onClick={send} className=\"preview_footer\">\n            <h2>Send Now</h2>\n            <Send fontSize=\"small\" className=\"preview_sendIcon\"/>\n        </div>\n\n\n            \n        </div>\n    )\n}\n\nexport default Preview;\n","import { RadioButtonUnchecked } from '@mui/icons-material';\nimport React, { useCallback, useRef,} from 'react'\nimport { useDispatch } from 'react-redux';\nimport Webcam from 'react-webcam';\nimport { setCameraImage } from './features/cameraSlice';\nimport { useHistory } from \"react-router-dom\";\nimport \"./WebCamCapture.css\"\n\n\nconst videoConstraints = {\n    width: 250,\n    height: 400,\n    facingMode: \"user\",\n};\n\nfunction WebCamCapture() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const webCamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n            const imageSrc = webCamRef.current.getScreenshot(); \n            dispatch(setCameraImage(imageSrc));\n            history.push(\"/preview\"); \n        },\n        [webCamRef],\n    )\n    return (\n        <div className=\"webcamCapture\">\n        <Webcam \n            audio={false}\n            height={videoConstraints.height}\n            width={videoConstraints.width}\n            ref={webCamRef}\n            mirrored\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={videoConstraints}\n        />\n        <RadioButtonUnchecked \n            className=\"webcamCapture_button\"\n            onClick={capture}\n            fontSize=\"large\"\n        />\n        \n            \n        </div>\n    )\n}\n\nexport default WebCamCapture\n","\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch,Route } from 'react-router-dom';\nimport './App.css';\nimport Chats from './Chats';\nimport ChatView from './ChatView';\nimport { login, logout, selectUser } from './features/appSlice';\nimport { auth } from './firebase';\nimport Login from './Login';\nimport Preview from './Preview';\nimport WebCamCapture from './WebCamCapture';\n\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch()\n  \n  useEffect(() => {\n    auth.onAuthStateChanged((authUser)=>{\n      if(authUser){\n        dispatch(login({\n          username: authUser.displayName,\n          profilePic: authUser.photoURL,\n          id: authUser.uid\n        }))\n      }else{\n        dispatch(logout())\n      }\n    })\n    \n  }, [])\n\n  return (\n    <div className=\"App\">\n    <Router>\n    {!user ? (<Login/>) : \n    (<>\n      <img className=\"app_logo\" src=\"https://scx2.b-cdn.net/gfx/news/2017/1-snapchat.jpg\" alt=\"\" />\n   \n   <div className=\"app_body\">\n   <div className=\"app_bodyBackground\">\n    <Switch>\n    <Route exact path=\"/\">\n    <WebCamCapture/>\n    </Route>\n    <Route exact path=\"/chats\">\n    <Chats/>\n    </Route>\n    <Route exact path=\"/chats/view\">\n    <ChatView/>\n    </Route>\n    <Route exact path=\"/preview\">\n    <Preview/>\n    </Route>\n\n    </Switch>\n    </div>\n    </div>\n    </>\n    )}\n    \n    </Router>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\nimport cameraReducer from '../features/cameraSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n    camera: cameraReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}